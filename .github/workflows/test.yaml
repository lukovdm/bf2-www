---

name: Linting and Testing
on: [push]

jobs:
  codestyle:
    name: Codestyle and translation checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install python
        uses: actions/setup-python@v2

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.0.0

      - name: Restore any cached Poetry dependencies
        uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install any new dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Run black
        run: poetry run black --quiet --check website

#      - name: Check translations
#        shell: bash
#        run: |
#          # Run makemessages for all app
#          cd website
#          for dir in $(find * -maxdepth 0 -type d); do (cd $dir && poetry run ../manage.py makemessages); done
#          cd ..
#          # Check for obsolete translations in .po files (starting with `#~`).
#          grep --include="*.po" --files-with-matches --recursive "^#~" website && exit 1 || echo "No obsolete translations found."
#          # Check for untranslated strings in .po files
#          empty_strings=$(sed '$a\\' website/**/locale/nl/LC_MESSAGES/django.po | tac | sed '/^$/N;/\nmsgstr ""$/,/^msgid/!d' | tac)
#          empty_strings+=$(sed '$a\\' website/locale/nl/LC_MESSAGES/django.po | tac | sed '/^$/N;/\nmsgstr ""$/,/^msgid/!d' | tac)
#          if [[ $empty_strings ]]; then echo $empty_strings && exit 1; else echo "No untranslated strings found."; fi
#          # Check for fuzzy translations in .po files
#          grep --include="*.po" --files-with-matches --recursive "#, fuzzy" website && exit 1 || echo "No fuzzy translations found."